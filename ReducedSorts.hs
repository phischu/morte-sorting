module ReducedSorts where

insertionSort = λ(a : *) → λ(min : a → a → a) → λ(max : a → a → a) → λ(mu_f : ∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → mu_f (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) (λ(vs : ∀(z : *) → z → (a → (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → z) → z) → λ(y : *) → λ(caseNu : ∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → caseNu (∀(z : *) → z → (a → (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → z) → z) (λ(s : ∀(z : *) → z → (a → (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → z) → z) → s (∀(z : *) → z → (a → (∀(z : *) → z → (a → (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → z) → z) → z) → z) (λ(z : *) → λ(empty : z) → λ(cons : a → (∀(z : *) → z → (a → (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → z) → z) → z) → empty) (λ(va : a) → λ(vx : ∀(y : *) → (∀(s@1 : *) → (s@1 → ∀(z : *) → z → (a → s@1 → z) → z) → s@1 → y) → y) → vx (∀(z : *) → z → (a → (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → z) → z) (λ(s : *) → λ(coalg : s → ∀(z : *) → z → (a → s → z) → z) → λ(vs : s) → λ(z : *) → λ(empty : z) → λ(cons : a → (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → z) → coalg vs z empty (λ(va : a) → λ(vx@1 : s) → cons va (λ(y : *) → λ(caseNu : ∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → caseNu s coalg vx@1))) (∀(z : *) → z → (a → (∀(z : *) → z → (a → (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → z) → z) → z) → z) (λ(z : *) → λ(empty : z) → λ(cons : a → (∀(z : *) → z → (a → (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → z) → z) → z) → cons va (λ(z : *) → λ(empty : z) → λ(cons : a → (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → z) → empty)) (λ(vab : a) → λ(vx@1 : ∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → λ(z : *) → λ(empty : z) → λ(cons : a → (∀(z : *) → z → (a → (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → z) → z) → z) → cons (min va vab) (λ(z : *) → λ(empty : z) → λ(cons : a → (∀(y : *) → (∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → y) → z) → cons (max va vab) vx@1)))) vs)

-- selectionSort = λ(a : *) → λ(min : a → a → a) → λ(max : a → a → a) → λ(vs : ∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → λ(y : *) → λ(caseNu : ∀(s : *) → (s → ∀(z : *) → z → (a → s → z) → z) → s → y) → caseNu (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) (λ(mu_f : ∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → mu_f (∀(z : *) → z → (a → (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → z) → z) (λ(f_x : ∀(z : *) → z → (a → (∀(z : *) → z → (a → (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → z) → z) → z) → z) → λ(z : *) → λ(empty : z) → λ(cons : a → (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → z) → f_x (∀(z : *) → z → (a → (∀(z : *) → z → (a → (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → z) → z) → z) → z) (λ(z : *) → λ(empty : z) → λ(cons : a → (∀(z : *) → z → (a → (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → z) → z) → z) → empty) (λ(vaa : a) → λ(inner : ∀(z : *) → z → (a → (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → z) → z) → inner (∀(z : *) → z → (a → (∀(z : *) → z → (a → (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → z) → z) → z) → z) (λ(z : *) → λ(empty : z) → λ(cons : a → (∀(z : *) → z → (a → (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → z) → z) → z) → cons vaa (λ(z : *) → λ(empty : z) → λ(cons : a → (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → z) → empty)) (λ(vab : a) → λ(vx : ∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → λ(z : *) → λ(empty : z) → λ(cons : a → (∀(z : *) → z → (a → (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → z) → z) → z) → cons (min vaa vab) (λ(z : *) → λ(empty : z) → λ(cons : a → (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → z) → cons (max vaa vab) vx))) z empty (λ(va : a) → λ(vx : ∀(z : *) → z → (a → (∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → z) → z) → cons va (λ(y : *) → λ(alg : (∀(z : *) → z → (a → y → z) → z) → y) → alg (λ(z : *) → λ(empty : z) → λ(cons : a → y → z) → vx z empty (λ(va : a) → λ(vx@1 : ∀(x : *) → ((∀(z : *) → z → (a → x → z) → z) → x) → x) → cons va (vx@1 y alg))))))) vs
